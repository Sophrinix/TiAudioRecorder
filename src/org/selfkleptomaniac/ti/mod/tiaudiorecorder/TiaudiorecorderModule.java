/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package org.selfkleptomaniac.ti.mod.tiaudiorecorder;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import android.media.MediaRecorder;
import java.io.File;
import java.io.IOException;
import java.util.regex.*;

import android.os.Environment;


@Kroll.module(name="Tiaudiorecorder", id="org.selfkleptomaniac.ti.mod.tiaudiorecorder")
public class TiaudiorecorderModule extends KrollModule
{

  // Standard Debugging variables
  private static final String LCAT = "TiaudiorecorderModule";
  private static final boolean DBG = TiConfig.LOGD;
  
  final MediaRecorder recorder = new MediaRecorder();
  public String path;

  // You can define constants with @Kroll.constant, for example:
  // @Kroll.constant public static final String EXTERNAL_NAME = value;
  
  public TiaudiorecorderModule()
  {
    super();
  }

  @Kroll.onAppCreate
  public static void onAppCreate(TiApplication app)
  {
    Log.d(LCAT, "inside onAppCreate");
    // put module init code that needs to run when the application is created
  }

  // Methods
  @Kroll.method
  public String example()
  {
    Log.d(LCAT, "example called");
    return "hello world";
  }
  
  // Properties
  @Kroll.getProperty
  public String getExampleProp()
  {
    Log.d(LCAT, "get example property");
    return "hello world";
  }
  
  
  @Kroll.setProperty
  public void setExampleProp(String value) {
    Log.d(LCAT, "set example property: " + value);
  }
  
  private String sanitizePath(String filename) {
    Log.d(LCAT, "filename:" + filename);
    Pattern pattern = Pattern.compile("(file|content):/");
    Matcher matcher = pattern.matcher(filename);
    filename = matcher.replaceFirst("");
    if (!filename.startsWith("/")) {
      filename = "/" + filename;
    }
    if (!filename.endsWith(".3gp")) {
      filename += ".3gp";
    }
    Log.d(LCAT, "filename:" + filename);
    //this.path = "/data/data/"+ TiApplication.getInstance().getPackageName() +"/app_appdata/" + filename;
    //this.path = Environment.getExternalStorageDirectory() + "/" +  TiApplication.getInstance().getPackageName() + filename;
    return filename;
  }
  
  @Kroll.method
  public String setPath(String path){
    this.path = sanitizePath(path);
    return this.path;
  }
  
  @Kroll.method
  public void start() throws IOException {
    String state = android.os.Environment.getExternalStorageState();
    if(!state.equals(android.os.Environment.MEDIA_MOUNTED))  {
        throw new IOException("Please check out your SD Card. The status is " + state + ".");
    }

    File directory = new File(path).getParentFile();
    if (!directory.exists() && !directory.mkdirs()) {
      throw new IOException("Failed to create file " + this.path);
    }

    recorder.setAudioSource(MediaRecorder.AudioSource.MIC);
    recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
    recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);
    recorder.setOutputFile(path);
    recorder.prepare();
    recorder.start();
  }
  
  @Kroll.method
  public void stop() throws IOException {
    recorder.stop();
      recorder.release();
  }
  
  @Kroll.method
  public void pause(){
    
  }
}

